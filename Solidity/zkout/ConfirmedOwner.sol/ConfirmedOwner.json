{"abi":null,"bytecode":{"object":"00000000030100190000006003300270000000320330019700000001022001900000002f0000c13d0000008002000039000000400020043f000000040230008c0000008e0000413d000000000201043b000000e0022002700000003a0420009c0000006b0000613d0000003b0120009c000000860000613d0000003c0120009c0000008e0000c13d0000000001000416000000000101004b0000008e0000c13d0000000101000039000000000201041a00000034032001970000000006000411000000000336004b000000990000c13d000000000300041a0000003504300197000000000464019f000000000040041b0000003502200197000000000021041b00000032010000410000000002000414000000320420009c0000000002018019000000c00120021000000034053001970000003f011001c70000800d020000390000000303000039000000440400004100c100bc0000040f00000001012001900000008e0000613d0000000001000019000000c20001042e0000000002000416000000000202004b0000008e0000c13d0000001f0230003900000033022001970000008002200039000000400020043f0000001f0230018f0000000504300272000000420000613d00000000050000190000000506500210000000000761034f000000000707043b000000800660003900000000007604350000000105500039000000000645004b0000003a0000413d000000000502004b000000510000613d0000000504400210000000000141034f00000003022002100000008004400039000000000504043300000000052501cf000000000525022f000000000101043b0000010002200089000000000121022f00000000012101cf000000000151019f0000000000140435000000200130008c0000008e0000413d000000800200043d0000003401200197000000340220009c0000008e0000213d000000000201004b000000900000c13d000000400100043d000000440210003900000037030000410000000000320435000000240210003900000018030000390000000000320435000000380200004100000000002104350000000402100039000000200300003900000000003204350000003202000041000000320310009c0000000001028019000000400110021000000039011001c7000000c3000104300000000002000416000000240330008c0000008e0000413d000000000202004b0000008e0000c13d0000000401100370000000000101043b0000003406100197000000340110009c0000008e0000213d000000000100041a00000034051001970000000001000411000000000151004b000000a30000c13d000000000156004b000000ad0000c13d0000003801000041000000800010043f0000002001000039000000840010043f0000001701000039000000a40010043f0000004101000041000000c40010043f0000003e01000041000000c3000104300000000001000416000000000101004b0000008e0000c13d000000000100041a0000003401100197000000800010043f0000004201000041000000c20001042e0000000001000019000000c300010430000000000200041a0000003502200197000000000112019f000000000010041b0000002001000039000001000010044300000120000004430000003601000041000000c20001042e0000003801000041000000800010043f0000002001000039000000840010043f0000001601000039000000a40010043f0000004301000041000000c40010043f0000003e01000041000000c3000104300000003801000041000000800010043f0000002001000039000000840010043f0000001601000039000000a40010043f0000003d01000041000000c40010043f0000003e01000041000000c3000104300000000101000039000000000201041a0000003502200197000000000262019f000000000021041b00000032010000410000000002000414000000320320009c0000000002018019000000c0012002100000003f011001c70000800d02000039000000030300003900000040040000410000002a0000013d000000bf002104210000000102000039000000000001042d0000000002000019000000000001042d000000c100000432000000c20001042e000000c300010430000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000001ffffffe0000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000043616e6e6f7420736574206f776e657220746f207a65726f000000000000000008c379a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006400000000000000000000000000000000000000000000000000000000000000000000000000000000f2fde38b000000000000000000000000000000000000000000000000000000008da5cb5b0000000000000000000000000000000000000000000000000000000079ba50974f6e6c792063616c6c61626c65206279206f776e65720000000000000000000000000000000000000000000000000000000000640000008000000000000000000200000000000000000000000000000000000000000000000000000000000000ed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127843616e6e6f74207472616e7366657220746f2073656c6600000000000000000000000000000000000000000000000000000000200000008000000000000000004d7573742062652070726f706f736564206f776e6572000000000000000000008be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"},"assembly":"\t.text\n\t.file\t\"ConfirmedOwner.sol:ConfirmedOwner\"\n\t.globl\t__entry\n__entry:\n.func_begin0:\n\tadd\tr1, r0, r3\n\tshr.s\t96, r3, r3\n\tand\t@CPI0_0[0], r3, r3\n\tand!\t1, r2, r2\n\tjump.ne\t@.BB0_1\n\tadd\t128, r0, r2\n\tst.1\t64, r2\n\tsub.s!\t4, r3, r2\n\tjump.lt\t@.BB0_2\n\tld\tr1, r2\n\tshr.s\t224, r2, r2\n\tsub.s!\t@CPI0_8[0], r2, r4\n\tjump.eq\t@.BB0_24\n\tsub.s!\t@CPI0_9[0], r2, r1\n\tjump.eq\t@.BB0_22\n\tsub.s!\t@CPI0_10[0], r2, r1\n\tjump.ne\t@.BB0_2\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_2[0], r2, r3\n\tcontext.caller\tr6\n\tsub!\tr6, r3, r3\n\tjump.ne\t@.BB0_18\n\tsload\tr0, r3\n\tand\t@CPI0_3[0], r3, r4\n\tor\tr4, r6, r4\n\tsstore\tr0, r4\n\tand\t@CPI0_3[0], r2, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r4\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tand\t@CPI0_2[0], r3, r5\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_18[0], r0, r4\n.BB0_32:\n\tnear_call\tr0, @__farcall, @DEFAULT_UNWIND\n\tand!\t1, r2, r1\n\tjump.eq\t@.BB0_2\n\tadd\tr0, r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_1:\n\tcontext.get_context_u128\tr2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tadd\t31, r3, r2\n\tand\t@CPI0_1[0], r2, r2\n\tadd\t128, r2, r2\n\tst.1\t64, r2\n\tand\t31, r3, r2\n\tshr.s!\t5, r3, r4\n\tjump.eq\t@.BB0_33\n\tadd\tr0, r0, r5\n.BB0_5:\n\tshl.s\t5, r5, r6\n\tptr.add\tr1, r6, r7\n\tld\tr7, r7\n\tadd\t128, r6, r6\n\tst.1\tr6, r7\n\tadd\t1, r5, r5\n\tsub!\tr5, r4, r6\n\tjump.lt\t@.BB0_5\n.BB0_33:\n\tsub!\tr2, r0, r5\n\tjump.eq\t@.BB0_7\n\tshl.s\t5, r4, r4\n\tptr.add\tr1, r4, r1\n\tshl.s\t3, r2, r2\n\tadd\t128, r4, r4\n\tld.1\tr4, r5\n\tshl\tr5, r2, r5\n\tshr\tr5, r2, r5\n\tld\tr1, r1\n\tsub\t256, r2, r2\n\tshr\tr1, r2, r1\n\tshl\tr1, r2, r1\n\tor\tr1, r5, r1\n\tst.1\tr4, r1\n.BB0_7:\n\tsub.s!\t32, r3, r1\n\tjump.lt\t@.BB0_2\n\tld.1\t128, r2\n\tand\t@CPI0_2[0], r2, r1\n\tsub.s!\t@CPI0_2[0], r2, r2\n\tjump.gt\t@.BB0_2\n\tsub!\tr1, r0, r2\n\tjump.ne\t@.BB0_11\n\tld.1\t64, r1\n\tadd\t68, r1, r2\n\tadd\t@CPI0_5[0], r0, r3\n\tst.1\tr2, r3\n\tadd\t36, r1, r2\n\tadd\t24, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_6[0], r0, r2\n\tst.1\tr1, r2\n\tadd\t4, r1, r2\n\tadd\t32, r0, r3\n\tst.1\tr2, r3\n\tadd\t@CPI0_0[0], r0, r2\n\tsub.s!\t@CPI0_0[0], r1, r3\n\tadd.ge\tr2, r0, r1\n\tshl.s\t64, r1, r1\n\tor\t@CPI0_7[0], r1, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_24:\n\tcontext.get_context_u128\tr2\n\tsub.s!\t36, r3, r3\n\tjump.lt\t@.BB0_2\n\tsub!\tr2, r0, r2\n\tjump.ne\t@.BB0_2\n\tptr.add.s\t4, r1, r1\n\tld\tr1, r1\n\tand\t@CPI0_2[0], r1, r6\n\tsub.s!\t@CPI0_2[0], r1, r1\n\tjump.gt\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r5\n\tcontext.caller\tr1\n\tsub!\tr1, r5, r1\n\tjump.ne\t@.BB0_28\n\tsub!\tr6, r5, r1\n\tjump.ne\t@.BB0_31\n\tadd\t@CPI0_6[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t23, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_15[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_22:\n\tcontext.get_context_u128\tr1\n\tsub!\tr1, r0, r1\n\tjump.ne\t@.BB0_2\n\tsload\tr0, r1\n\tand\t@CPI0_2[0], r1, r1\n\tst.1\t128, r1\n\tadd\t@CPI0_16[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_2:\n\tadd\tr0, r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_11:\n\tsload\tr0, r2\n\tand\t@CPI0_3[0], r2, r2\n\tor\tr2, r1, r1\n\tsstore\tr0, r1\n\tadd\t32, r0, r1\n\tst.2\t256, r1\n\tst.2\t288, r0\n\tadd\t@CPI0_4[0], r0, r1\n\tret.ok.to_label\tr1, @DEFAULT_FAR_RETURN\n.BB0_18:\n\tadd\t@CPI0_6[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t22, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_17[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_28:\n\tadd\t@CPI0_6[0], r0, r1\n\tst.1\t128, r1\n\tadd\t32, r0, r1\n\tst.1\t132, r1\n\tadd\t22, r0, r1\n\tst.1\t164, r1\n\tadd\t@CPI0_11[0], r0, r1\n\tst.1\t196, r1\n\tadd\t@CPI0_12[0], r0, r1\n\tret.revert.to_label\tr1, @DEFAULT_FAR_REVERT\n.BB0_31:\n\tadd\t1, r0, r1\n\tsload\tr1, r2\n\tand\t@CPI0_3[0], r2, r2\n\tor\tr2, r6, r2\n\tsstore\tr1, r2\n\tadd\t@CPI0_0[0], r0, r1\n\tcontext.gas_left\tr2\n\tsub.s!\t@CPI0_0[0], r2, r3\n\tadd.ge\tr1, r0, r2\n\tshl.s\t192, r2, r1\n\tor\t@CPI0_13[0], r1, r1\n\tadd\t32781, r0, r2\n\tadd\t3, r0, r3\n\tadd\t@CPI0_14[0], r0, r4\n\tjump\t@.BB0_32\n.func_end0:\n\n__farcall:\n.func_begin1:\n.tmp0:\n\tfar_call\tr1, r2, @.BB1_2\n.tmp1:\n\tadd\t1, r0, r2\n\tret\n.BB1_2:\n.tmp2:\n\tadd\tr0, r0, r2\n\tret\n.func_end1:\n\n\t.note.GNU-stack\n\t.rodata\nCPI0_0:\n\t.cell 4294967295\nCPI0_1:\n\t.cell 8589934560\nCPI0_2:\n\t.cell 1461501637330902918203684832716283019655932542975\nCPI0_3:\n\t.cell -1461501637330902918203684832716283019655932542976\nCPI0_4:\n\t.cell 53919893334301279589334030174039261352344891250716429051063678533632\nCPI0_5:\n\t.cell 30477107189792067803313207904920092556244933919346619109201225024049046880256\nCPI0_6:\n\t.cell 3963877391197344453575983046348115674221700746820753546331534351508065746944\nCPI0_7:\n\t.cell 7922816251426433759354395033600\nCPI0_8:\n\t.cell 4076725131\nCPI0_9:\n\t.cell 2376452955\nCPI0_10:\n\t.cell 2042253463\nCPI0_11:\n\t.cell 35927816869373543188625519729548758844492007594142020231330326663764612481024\nCPI0_12:\n\t.cell 7922816253787617000789217640448\nCPI0_13:\n\t.cell 904625697166532776746648320380374280103671755200316906558262375061821325312\nCPI0_14:\n\t.cell -8352700767705030668357216594227241474277607171479992828920686105414662745480\nCPI0_15:\n\t.cell 30477107189792067809907278063365548287250439923367031265618412078853158600704\nCPI0_16:\n\t.cell 2535301202817642044428229017600\nCPI0_17:\n\t.cell 35035607279084747875032095267602354476277983814074373230998149299897699926016\nCPI0_18:\n\t.cell -52524777015005588113349992707137368332388074750292320778649315033004770043936\n","methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","transferOwnership(address)":"f2fde38b"},"metadata":{"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_system_request_memoization_disabled":false,"is_verify_each_enabled":false,"jump_table_density_threshold":null,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_metadata":"{\"compiler\":{\"version\":\"0.8.21+commit.ec5dde33\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"The ConfirmedOwner contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptOwnership()\":{\"notice\":\"Allows an ownership transfer to be completed by the recipient.\"},\"owner()\":{\"notice\":\"Get the current owner\"},\"transferOwnership(address)\":{\"notice\":\"Allows an owner to begin transferring ownership to a new address.\"}},\"notice\":\"A contract with helpers for basic contract ownership.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":\"ConfirmedOwner\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"details\":{\"constantOptimizer\":false,\"cse\":false,\"deduplicate\":false,\"inliner\":false,\"jumpdestRemover\":false,\"orderLiterals\":false,\"peephole\":false,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"dhfoDgvulfnTUtnIf[xa[r]EscLMcCTUtTOntnfDIulLculVcul [j]Tpeulxa[rul]xa[r]cLgvifCTUca[r]LSsTFOtfDnca[r]Iulc]jmul[jul] VcTOcul jmul:fDnTOc\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\":{\"keccak256\":\"0xdcb0e9135ddbe71ee27ba99fa06656960c66c964cf2ecb29696da1c1427d9861\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f914a1b638300e82d8f5a020a4195235599afebab4ef1e10c6992f3c90e7df3e\",\"dweb:/ipfs/Qmf2MbuVB16qbCGii3U5cjcBvVjAHHYzKp9voJa2eDch9B\"]},\"lib/chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\":{\"keccak256\":\"0x2422a055657a87e98be61f8f31abb1824ec50fd0f73949f4e3c6ac877efb6da8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fde3b9ac3a4c42ea43e2f92b037d32ab20e30818471c6e20d2590147a6c2958a\",\"dweb:/ipfs/QmQ2ohQP4GnhPUsiWCvCfb1dsoGYDdxSap3dxtnYTV4rmT\"]},\"lib/chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\":{\"keccak256\":\"0x885de72b7b4e4f1bf8ba817a3f2bcc37fd9022d342c4ce76782151c30122d767\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17c636625a5d29a140612db496d2cca9fb4b48c673adb0fd7b3957d287e75921\",\"dweb:/ipfs/QmNoBX8TY424bdQWyQC7y3kpKfgxyWxhLw7KEhhEEoBN9q\"]}},\"version\":1}","solc_version":"0.8.21","solc_zkvm_edition":"1.0.1","zk_version":"1.4.1"},"storageLayout":{"storage":[],"types":{}},"userdoc":{},"devdoc":{},"irOptimized":"/// @use-src 0:\"lib/chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\", 1:\"lib/chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\", 2:\"lib/chainlink/contracts/src/v0.8/shared/interfaces/IOwnable.sol\"\nobject \"ConfirmedOwner_20\" {\n    code {\n        {\n            /// @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\"\n            let _1 := memoryguard(0x80)\n            if callvalue() { revert(0, 0) }\n            let programSize := datasize(\"ConfirmedOwner_20\")\n            let argSize := sub(codesize(), programSize)\n            let newFreePtr := add(_1, and(add(argSize, 31), not(31)))\n            if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, _1))\n            {\n                mstore(/** @src -1:-1:-1 */ 0, /** @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ shl(224, 0x4e487b71))\n                mstore(4, 0x41)\n                revert(/** @src -1:-1:-1 */ 0, /** @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ 0x24)\n            }\n            mstore(64, newFreePtr)\n            codecopy(_1, programSize, argSize)\n            if slt(sub(add(_1, argSize), _1), 32)\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\"\n            let value := mload(_1)\n            let _2 := and(value, sub(shl(160, 1), 1))\n            if iszero(eq(value, _2))\n            {\n                revert(/** @src -1:-1:-1 */ 0, 0)\n            }\n            /// @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\"\n            if /** @src 1:598:620  \"newOwner != address(0)\" */ iszero(/** @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ _2)\n            {\n                let memPtr := mload(64)\n                mstore(memPtr, shl(229, 4594637))\n                mstore(add(memPtr, 4), 32)\n                mstore(add(memPtr, 36), 24)\n                mstore(add(memPtr, 68), \"Cannot set owner to zero\")\n                revert(memPtr, 100)\n            }\n            sstore(/** @src -1:-1:-1 */ 0, /** @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ or(and(sload(/** @src -1:-1:-1 */ 0), /** @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ not(sub(shl(160, 1), 1))), _2))\n            let _3 := mload(64)\n            let _4 := datasize(\"ConfirmedOwner_20_deployed\")\n            codecopy(_3, dataoffset(\"ConfirmedOwner_20_deployed\"), _4)\n            return(_3, _4)\n        }\n    }\n    /// @use-src 0:\"lib/chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol\", 1:\"lib/chainlink/contracts/src/v0.8/shared/access/ConfirmedOwnerWithProposal.sol\"\n    object \"ConfirmedOwner_20_deployed\" {\n        code {\n            {\n                /// @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\"\n                let _1 := memoryguard(0x80)\n                mstore(64, _1)\n                if iszero(lt(calldatasize(), 4))\n                {\n                    let _2 := 0\n                    switch shr(224, calldataload(_2))\n                    case 0x79ba5097 {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let _3 := sload(/** @src 1:1150:1164  \"s_pendingOwner\" */ 0x01)\n                        /// @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\"\n                        let _4 := sub(shl(160, 1), 1)\n                        if iszero(/** @src 1:1136:1164  \"msg.sender == s_pendingOwner\" */ eq(/** @src 1:1136:1146  \"msg.sender\" */ caller(), /** @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ and(_3, _4)))\n                        {\n                            mstore(_1, shl(229, 4594637))\n                            mstore(add(_1, 4), 32)\n                            mstore(add(_1, 36), 22)\n                            mstore(add(_1, 68), \"Must be proposed owner\")\n                            revert(_1, 100)\n                        }\n                        let _5 := sload(_2)\n                        let _6 := shl(160, 0xffffffffffffffffffffffff)\n                        sstore(_2, or(and(_5, _6), /** @src 1:1136:1146  \"msg.sender\" */ caller()))\n                        /// @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\"\n                        sstore(/** @src 1:1150:1164  \"s_pendingOwner\" */ 0x01, /** @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ and(_3, _6))\n                        /// @src 1:1295:1337  \"OwnershipTransferred(oldOwner, msg.sender)\"\n                        log3(/** @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ _2, _2, /** @src 1:1295:1337  \"OwnershipTransferred(oldOwner, msg.sender)\" */ 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0, /** @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ and(_5, _4), /** @src 1:1136:1146  \"msg.sender\" */ caller())\n                        /// @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\"\n                        return(_2, _2)\n                    }\n                    case 0x8da5cb5b {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), _2) { revert(_2, _2) }\n                        let cleaned := and(sload(_2), sub(shl(160, 1), 1))\n                        let memPos := mload(64)\n                        mstore(memPos, cleaned)\n                        return(memPos, 32)\n                    }\n                    case 0xf2fde38b {\n                        if callvalue() { revert(_2, _2) }\n                        if slt(add(calldatasize(), not(3)), 32) { revert(_2, _2) }\n                        let value := calldataload(4)\n                        let _7 := sub(shl(160, 1), 1)\n                        let _8 := and(value, _7)\n                        if iszero(eq(value, _8)) { revert(_2, _2) }\n                        let cleaned_1 := and(sload(_2), _7)\n                        if iszero(/** @src 1:1918:1939  \"msg.sender == s_owner\" */ eq(/** @src 1:1918:1928  \"msg.sender\" */ caller(), /** @src 1:1918:1939  \"msg.sender == s_owner\" */ cleaned_1))\n                        /// @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\"\n                        {\n                            let memPtr := mload(64)\n                            mstore(memPtr, shl(229, 4594637))\n                            mstore(add(memPtr, 4), 32)\n                            mstore(add(memPtr, 36), 22)\n                            mstore(add(memPtr, 68), \"Only callable by owner\")\n                            revert(memPtr, 100)\n                        }\n                        if /** @src 1:1649:1665  \"to != msg.sender\" */ eq(/** @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ _8, /** @src 1:1918:1928  \"msg.sender\" */ caller())\n                        /// @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\"\n                        {\n                            let memPtr_1 := mload(64)\n                            mstore(memPtr_1, shl(229, 4594637))\n                            mstore(add(memPtr_1, 4), 32)\n                            mstore(add(memPtr_1, 36), 23)\n                            mstore(add(memPtr_1, 68), \"Cannot transfer to self\")\n                            revert(memPtr_1, 100)\n                        }\n                        sstore(/** @src 1:1700:1719  \"s_pendingOwner = to\" */ 0x01, /** @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ or(and(sload(/** @src 1:1700:1719  \"s_pendingOwner = to\" */ 0x01), /** @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ shl(160, 0xffffffffffffffffffffffff)), _8))\n                        /// @src 1:1731:1770  \"OwnershipTransferRequested(s_owner, to)\"\n                        log3(/** @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\" */ _2, _2, /** @src 1:1731:1770  \"OwnershipTransferRequested(s_owner, to)\" */ 0xed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae1278, cleaned_1, _8)\n                        /// @src 0:240:381  \"contract ConfirmedOwner is ConfirmedOwnerWithProposal {...\"\n                        return(_2, _2)\n                    }\n                }\n                revert(0, 0)\n            }\n        }\n        data \".metadata\" hex\"a164736f6c6343000815000a\"\n    }\n}\n","hash":"010000456f368e2b721d57a7747184dd5a0395ddfc3c56923063a59e92b79eee","factoryDependencies":{},"id":0}